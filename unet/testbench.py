# -*- coding: utf-8 -*-
"""aplicação_unet.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1j4EVNMUtrmaGta8lRIU-x--RKpBbQou_
"""

import numpy as np
import cv2
import matplotlib.pyplot as plt
from keras.models import *

def test_load_image(test_file, target_size=(256,256)):
    img = cv2.imread(test_file, cv2.IMREAD_GRAYSCALE)
    img = img / 255
    img = cv2.resize(img, target_size)
    img = np.reshape(img, img.shape + (1,))
    img = np.reshape(img,(1,) + img.shape)
    return img
def save_result(save_path, npyfile, test_files):
    for i, item in enumerate(npyfile):
        result_file = test_files[i]
        img = (item[:, :, 0] * 255.).astype(np.uint8)

        cv2.imwrite(save_path, img)       

def add_colored_mask(image, mask_image):
    mask_image_gray = cv2.cvtColor(mask_image, cv2.COLOR_BGR2GRAY)
    
    mask = cv2.bitwise_and(mask_image, mask_image, mask=mask_image_gray,)
    
    mask_coord = np.where(mask!=[0,0,0])

    mask[mask_coord[0],mask_coord[1],:]=[255,0,0]

    ret = cv2.addWeighted(image, 0.7, mask, 0.3, 0)

    return ret

model = load_model('/content/drive/MyDrive/unet.h5',compile=False)

img_test = 'image_address'
test_gen = test_load_image(img_test, target_size=(512,512))
result = model.predict(test_gen,verbose = 1)
save_result('predict.jpeg', result,img_test)

img = cv2.imread(img_test)
img = cv2.resize(img, (1000,1000))
predict_image = cv2.imread("predict.jpeg")
predict_image = cv2.resize(predict_image, (1000,1000))
plt.imshow(add_colored_mask(img,predict_image ))